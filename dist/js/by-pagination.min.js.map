{"version":3,"sources":["by-pagination.js"],"names":["self","factory","define","exports","e","require","root","$a","jQuery","Pagination","element","options","this","$el","$","firstLastTxt","firstLastBtn","prevNextBtn","to","data","Plugin","option","_typeof","Symbol","iterator","obj","constructor","prototype","pages","pageTemplate","page","$active","prevNextTxt","init","$next","$prev","find","on","insertBefore","i","$p1","$p2","first","text","$last","insertAfter","proxy","next","$hellip1","parseInt","prev","render","$minus3","$minus1","$plus5","show","$minus5","$hellip2","$plus4","$first","removeClass","$plus3","hide","$minus4","addClass","$this","window","byPagination"],"mappings":"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","file":"by-pagination.min.js","sourcesContent":["function Pagination(element, options) {\n  this.$el      = $(element)\n  this.options  = $.extend({}, Pagination.DEFAULTS, options)\n\n  this.init()\n\n  var self = this\n\n  // 绑定点击事件\n  this.$el.on('click.by.pagination', 'a', function(e) {\n    e.preventDefault()\n\n    var $a = $(this)\n\n    // 如果点击当前页则返回\n    if ($a.parent().hasClass('active')) return\n\n    // 跳转到点击页面\n    if ($a.data('page')) self.to($a.data('page'))\n  })\n}\n\n// 默认配置\nPagination.DEFAULTS = {\n  firstLastBtn: true,\n  firstLastTxt: ['首页', '尾页'],\n  pages: 1,\n  page: 1,\n  pageTemplate: `\n    <li>\n      <a href=\"#\"></a>\n    </li>\n  `,\n  prevNextBtn: true,\n  prevNextTxt: ['上一页', '下一页']\n}\n\n/*\n * @description 初始化\n */\nPagination.prototype.init = function(options) {\n  if (options) {\n    this.options.pages = options.pages\n    this.$el.empty()\n  }\n  var page = this.options.page\n  var pages = this.options.pages\n  var pageTemplate = this.options.pageTemplate\n\n  // 生成当前页\n  this.$active = $(pageTemplate).appendTo(this.$el).addClass('active')\n\n  // 生成首页和尾页按钮\n  if (this.options.firstLastBtn) {\n    this.$first = $(pageTemplate).insertBefore(this.$active)\n    this.$first.find('a')\n      .on('click.by.pagination', $.proxy(this.first, this))\n      .text(this.options.firstLastTxt[0])\n\n    this.$last = $(pageTemplate).insertAfter(this.$active)\n    this.$last.find('a')\n      .on('click.by.pagination', $.proxy(this.last, this))\n      .text(this.options.firstLastTxt[1])\n  }\n\n  // 生成上一页和下一页按钮\n  if (this.options.prevNextBtn) {\n    this.$prev = $(pageTemplate).insertBefore(this.$active)\n    this.$prev.find('a')\n      .on('click.by.pagination', $.proxy(this.prev, this))\n      .text(this.options.prevNextTxt[0])\n\n    this.$next = $(pageTemplate).insertAfter(this.$active)\n    this.$next.find('a')\n      .on('click.by.pagination', $.proxy(this.next, this))\n      .text(this.options.prevNextTxt[1])\n  }\n\n  // 生成第一页和最后一页按钮\n  if (pages > 1) {\n    this.$p1 = $(pageTemplate).insertBefore(this.$active)\n    this.$p1.find('a').data('page', 1).text(1)\n    this.$p2 = $(pageTemplate).insertAfter(this.$active)\n    this.$p2.find('a').data('page', pages).text(pages)\n  }\n\n  // 生成当前页两边的页码按钮\n  for (let i = 5; i >= 1; i--) {\n    if (pages > i + 1) {\n      this[`$minus${i}`] = $(pageTemplate).insertBefore(this.$active)\n      this[`$minus${i}`].find('a').data('page', page - i)\n      this[`$plus${i}`] = $(pageTemplate).insertAfter(this.$active)\n      this[`$plus${i}`].find('a').data('page', page + i)\n    }\n  }\n\n  // 生成省略号\n  if (pages > 7) {\n    this.$hellip1 = $(`\n      <li>\n        <span>&hellip;</span>\n      </li>\n      `).insertAfter(this.$p1)\n\n    this.$hellip2 = $(`\n      <li>\n        <span>&hellip;</span>\n      </li>\n      `).insertBefore(this.$p2)\n  }\n\n  this.render(this.options.page)\n}\n\n/*\n * @description to\n * @param {Number} page 页码值\n */\nPagination.prototype.to = function(page) {\n  this.options.page = parseInt(page) || 1\n  this.$el.trigger('page.by.pagination', this.options.page)\n  this.$active.find('a').focus()\n  this.render(this.options.page)\n}\n\n/*\n * @description 跳转到第一页\n */\nPagination.prototype.first = function() {\n  if (this.options.page == 1) return\n  this.options.page = 1\n  this.to(1)\n}\n\n/*\n * @description 上一页\n */\nPagination.prototype.prev = function() {\n  if (this.options.page <= 1) return\n  this.options.page--\n  this.to(this.options.page)\n}\n\n/*\n * @description 下一页\n */\nPagination.prototype.next = function() {\n  if (this.options.page >= this.options.pages) return\n  this.options.page++\n  this.to(this.options.page)\n}\n\n/*\n * @description 跳转到最后一页\n */\nPagination.prototype.last = function() {\n  if (this.options.page == this.options.pages) return\n  this.options.page = this.options.pages\n  this.to(this.options.pages)\n}\n\n/*\n * @description render\n */\nPagination.prototype.render = function(page) {\n  var pages = this.options.pages\n\n  this.$active.find('a').text(page)\n\n  if (pages > 1) {\n    page > 1 ? this.$p1.show() : this.$p1.hide()\n    page < pages ? this.$p2.show() : this.$p2.hide()\n  }\n\n  if (pages > 2) {\n    this.$minus1.find('a').data('page', page - 1).text(page - 1)\n    this.$plus1.find('a').data('page', page + 1).text(page + 1)\n    page > 2 ? this.$minus1.show() : this.$minus1.hide()\n    page < pages - 1 ? this.$plus1.show() : this.$plus1.hide()\n  }\n\n  if (pages > 3) {\n    this.$minus2.find('a').data('page', page - 2).text(page - 2)\n    this.$plus2.find('a').data('page', page + 2).text(page + 2)\n    page > 3 ? this.$minus2.show() : this.$minus2.hide()\n    page < pages - 2 ? this.$plus2.show() : this.$plus2.hide()\n  }\n\n  if (pages > 4) {\n    this.$minus3.find('a').data('page', page - 3).text(page - 3)\n    this.$plus3.find('a').data('page', page + 3).text(page + 3)\n    page > pages - 3 && page > 4 ? this.$minus3.show() : this.$minus3.hide()\n    page < 4 && page < pages - 3 ? this.$plus3.show() : this.$plus3.hide()\n  }\n\n  if (pages > 5) {\n    this.$minus4.find('a').data('page', page - 4).text(page - 4)\n    this.$plus4.find('a').data('page', page + 4).text(page + 4)\n    page > pages - 2 && page > 5 ? this.$minus4.show() : this.$minus4.hide()\n    page < 3 && page < pages - 4 ? this.$plus4.show() : this.$plus4.hide()\n  }\n\n  if (pages > 6) {\n    this.$minus5.find('a').data('page', page - 5).text(page - 5)\n    this.$plus5.find('a').data('page', page + 5).text(page + 5)\n    page > pages - 1 ? this.$minus5.show() : this.$minus5.hide()\n    page < 2 ? this.$plus5.show() : this.$plus5.hide()\n  }\n\n  // hellip\n  if (pages > 7) {\n    page > 4 ? this.$hellip1.show() : this.$hellip1.hide()\n    page < pages - 3 ? this.$hellip2.show() : this.$hellip2.hide()\n  }\n\n  // prev/next\n  if (this.options.firstLastBtn) {\n    if (page == 1) {\n      this.$first.addClass('disabled')\n    } else {\n      this.$first.removeClass('disabled')\n    }\n\n    if (page == pages) {\n      this.$last.addClass('disabled')\n    } else {\n      this.$last.removeClass('disabled')\n    }\n  }\n\n  if (this.options.prevNextBtn) {\n    if (page == 1) {\n      this.$prev.addClass('disabled')\n    } else {\n      this.$prev.removeClass('disabled')\n    }\n\n    if (page == pages) {\n      this.$next.addClass('disabled')\n    } else {\n      this.$next.removeClass('disabled')\n    }\n  }\n}\n\nfunction Plugin(option) {\n  return this.each(function() {\n    var $this   = $(this)\n    var data    = $this.data('byPagination')\n    var options = $.extend({}, $this.data(), typeof option == 'object' && option)\n\n    if (!data) $this.data('byPagination', (data = new Pagination(this, options)))\n    // 重新初始化\n\t  else if (typeof option == 'object') data.init(option)\n    if (typeof option == 'string' && typeof data[option] == 'function') data[option]()\n    if (typeof option == 'number') data.to(option)\n  })\n}\n\n$.fn.byPagination          = Plugin\n$.fn.byPagination.DEFAULTS = Pagination.DEFAULTS\n\n$(window).on('load.by.pagination', () => {\n  Plugin.call($('[data-init=\"by-pagination\"]'))\n})\n"]}