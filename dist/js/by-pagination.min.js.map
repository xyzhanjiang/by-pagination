{"version":3,"sources":["by-pagination.js"],"names":["self","factory","define","exports","e","require","root","$a","jQuery","Pagination","element","options","this","$el","$","extend","DEFAULTS","firstLastTxt","on","pages","prevNextBtn","data","to","Plugin","option","_typeof","Symbol","hasClass","first","iterator","obj","parent","prev","constructor","firstLastBtn","pageTemplate","page","$active","prevNextTxt","prototype","init","find","addClass","insertAfter","$p1","insertBefore","$p2","text","$last","$prev","$next","$hellip1","$hellip2","i","render","$minus1","last","$minus4","$minus5","$minus3","show","$plus3","hide","$plus4","removeClass","$first","$plus5","$this","byPagination"],"mappings":"CAEE,SAAAA,EAAAC,yCAEAC,QAAA,UAAAD,GAKY,gBAAAE,SAHZC,OAAIJ,QAAJC,EAAAI,QAAA,WAEAC,EAAAC,aAAAN,EAAAK,EAAAE,SAEEJ,KAAAA,SAAAA,GAKA,YAOA,SAAAK,GAAAC,EAAAC,GAFKC,KAAAC,IAELN,EAAAA,GAFKK,KAXPD,QAAAG,EAAAC,UAAAN,EAAAO,SAAAL,cAkBFF,IAAAA,GAAAO,IAGEC,MAAAA,IAHFC,GAAA,sBAAA,IAAA,SAAAd,GAIEe,EAAAA,gBAOAC,IAAAA,GAAAA,EAAaR,gNAWZL,EAAAc,KAAA,SAAArB,EAAAsB,GAAAf,EAAAc,KAAA,YA6NF,QAFDE,GAAAC,uWA3PI,GAAAC,GAAgB,kBAAAC,SAHhBC,gBAG6CC,QAA7CC,SAHA,SAAAC,GAAA9B,aAAA8B,IACOC,SAASJ,GAAAA,MAAAA,IAAZpB,kBAAgCyB,SAKxBL,EAASM,cAAAP,OAAuB1B,eAAA8B,UAkC9CrB,GAAAU,UACAe,cAAAC,2BAEAhB,MAAA,EACAiB,KAAIC,mEAEFjB,aAAA,EAFFkB,aAAS3B,MAAQuB,QAmBfzB,EAAA8B,UAAAC,KAAA,SAAA7B,OAIDC,KAAAD,QAAAQ,MAAAR,EAAAQ,MAVDP,KAAIC,IAAKF,QAaT,IAAAyB,GAAIjB,KAAJsB,QACEC,0BAGAP,EAAcA,KAAAA,QAAUQ,qEAQtB/B,KAAAgC,QAAAT,eACAvB,KAAAgC,OAAA9B,EAAAqB,GAAAU,aAAAjC,KAAAyB,SACDzB,KAAAkC,OAAAhC,KAAAqB,KAAAA,SAAAQ,uBAAAI,KAAAnC,KAAAD,QAAAM,aAAA,IATFL,KAAAoC,MAAAlC,EAAAqB,GAAAQ,YAAA/B,KAAAyB,iGAoBCzB,KAAAD,QAAAS,cAKDR,KAAAqC,MAAAnC,EAAAqB,GAAAU,aAAAjC,KAAAwB,SAlBGxB,KAAAqC,MAAAR,KAAA,KAAAC,SAAsBP,sBAA0BY,KAAKV,KAAjC1B,QAApB2B,YAAA,IAnDN1B,KAAAsC,MAAApC,EAAAqB,GAAAQ,YAAA/B,KAAAyB,SAsDGzB,KAAAsC,MAAAT,KAAA,KAAAC,SAAA,sBAAAK,KAAAnC,KAAAD,QAAA2B,YAAA,KAICnB,EAAKgC,6CAoBTvC,KAAAwC,IAAAA,KAAA,KAAAtC,KAAAA,OAAAA,GAAAA,KAAAA,GAUAL,KAAAA,IAAAA,EAAAA,GAAAA,YAAAA,KAAAA,mDAdA,KAAA,GAAA4C,GAAA,EAAAA,GAAA,EAAAA,yGAuBA5C,KAAW8B,QAAUP,GAArBlB,EAAAqB,GAAuCQ,YAAA/B,KAAAyB,SACrCzB,KAAID,QAAJ0C,GAAiBjB,KAAAA,KAAWA,KAAXA,OAAjBA,EAAAiB,UAbFzC,KAAAuC,SAAArC,EAAA,oEAAA6B,YAAA/B,KAAAgC,iHAwBEhC,KAAKU,OAALV,KAAAD,QAAAyB,OAOA3B,EAASE,UAAQyB,GAAjB,SAAyBA,GACzBxB,KAAAD,QAAKA,KAALyB,SAAyBzB,IAAAA,EACzBC,KAAKU,IAAAA,QAAL,qBAAAV,KAAAD,QAAAyB,MAHFxB,KAAAU,QAAAX,KAAAA,KAAAyB,QACExB,KAAA0C,OAAA1C,KAAAD,QAAAyB,OATA3B,EAASE,UAAQyB,MAAQ,WAoBzB,GAAAxB,KAAKyB,QAALD,OAlBAxB,KAAKU,QAAQX,KAAL,EAgBRC,KAAAU,GAAA,KAUEb,EAAK8C,UAAQd,KAAUpB,WACvBT,KAAAD,QAAAyB,MAAsBf,IACtBe,KAAAA,QAAWzB,OAHbC,KAAAU,GAAAV,KAAAD,QAAAyB,QAUEA,EAAAA,UAAWzB,KAAAQ,mDAEZP,KAAAyB,QAAAI,oCAOAhC,EAAAU,UAAAqC,KAAA,WAlBC5C,KAAK2C,QAAQd,MAAUpB,KAAKV,QAAQyB,QAoBtCxB,KAAAD,QAAAyB,KAAexB,KAAAS,QAAAF,MACbiB,KAAAA,GAAAA,KAAKqB,QAAQhB,SAMfhC,EAAIU,UAAWmC,OAAf,SAAelB,GACbA,GAAAA,GAAAxB,KAAK8C,QAAAA,KAELtB,MAAAA,QAAAA,KAAAA,KAAAA,KAAAA,GAEDjB,EAAA,IAlBCiB,EAAKuB,EAAAA,KAAQlB,IAAKmB,OAAUhD,KAA5BgC,IAAoCR,OAoBtCA,EAAAyB,EAAApB,KAAAK,IAAAzB,OAAAT,KAAAwB,IAAA0B,QAGE1B,EAAAA,sDAjBFxB,KAAIO,OAAJsB,KAAe,KAAApB,KAAA,OAAAe,EAAA,GAAAW,KAAAX,EAAA,GAoBfA,EAAAqB,EAAAA,KAAAhB,QAAApB,OAAAT,KAAAwB,QAAAW,OACAX,EAAI2B,EAAKpD,EAAQuB,KAAAA,OAAjB0B,OAA+BxB,KAAAW,OAAAX,QAG5BjB,EAAA,sDAEAP,KAAAO,OAAAsB,KAAA,KAAApB,KAAA,OAAAe,EAAA,GAAAW,KAAAX,EAAA,GAlBDA,EAAKsB,EAAAA,KAAQjB,QAAUpB,OAAKT,KAAQwB,QAAUW,OAoB9CX,EAAIA,EAAQjB,EAAZP,KAAmBS,OAAAuC,OAAAxB,KAAAW,OAAAX,QAGjBjB,EAAA,sDAEHP,KAAAiD,OAAApB,KAAA,KAAApB,KAAA,OAAAe,EAAA,GAAAW,KAAAX,EAAA,GAlBDA,EAAIjB,EAAW,GAAAiB,EAAA,EAAAxB,KAAA+C,QAAAC,OAAAhD,KAAA+C,QAAAG,OAoBf1B,EAAA,GAAAA,EAAAe,EAAAS,EAAAhD,KAAAiD,OAAAV,OAAAvC,KAAAiD,OAAAC,cAIGlD,KAAA6C,QAAAhB,KAAA,KAAApB,KAAA,OAAAe,EAAA,GAAAW,KAAAX,EAAA,GACCxB,KAAAmD,OAAKd,KAAMe,KAAAA,KAAX,OAAuB5B,EAAA,GAAAW,KAAAX,EAAA,GACxBA,EAAAA,EAAA,GAAAA,EAAA,EAAAxB,KAAA6C,QAAAG,OAAAhD,KAAA6C,QAAAK,OAlBC1B,EAAK6B,GAAAA,EAAOvB,EAAS,EAAA9B,KAArBmD,OAAAH,OAAAhD,KAAAmD,OAAAD,QAoBF3C,EAAA,sDAICP,KAAAwB,OAAAjB,KAAA,KAAAE,KAAA,OAAAe,EAAA,GAAAW,KAAAX,EAAA,GACFA,EAAAY,EAAAN,EAAAA,KAAAgB,QAAAE,OAAAhD,KAAA8C,QAAAI,OA/EH1B,EAAA,EAAAxB,KAAAsD,OAAAN,OAAAhD,KAAAsD,OAAAJ,cAqFI1B,EAAA,EAAAxB,KAAAuC,SAAAS,OAAAhD,KAAAuC,SAAAW,OACA1B,EAAIzB,EAAUG,EAAAA,KAAAA,SAAaqD,OAAAA,KAAAA,SAAAA,QAE3BvD,KAEIqC,QAAIe,eACR,GAAA5B,mCAGHxB,KAAAsC,OAAAR,YAAA,YAGI0B,GAAAA,EAlBFxD,KAAAoC,MAAAN,SAAA,gDAOC9B,KAAID,QAAUG,mBAEdF,KAAKS,MAAM8C,SAAW,YAAtBvD,KAEIqC,MAAIe,YAAA,YAPV5B,GAAAjB,EAWDP,KAAAsC,MAAAR,SAAA,YAEI0B,KAAAA,MAALJ,YAAA","file":"by-pagination.min.js","sourcesContent":["function Pagination(element, options) {\r\n  this.$el      = $(element)\r\n  this.options  = $.extend({}, Pagination.DEFAULTS, options)\r\n\r\n  this.init()\r\n\r\n  var self = this\r\n\r\n  // 绑定点击事件\r\n  this.$el.on('click.by.pagination', 'a', function(e) {\r\n    e.preventDefault()\r\n\r\n    var $a = $(this)\r\n\r\n    // 如果点击当前页则返回\r\n    if ($a.parent().hasClass('active')) return\r\n\r\n    if ($a.hasClass('by-pagination-first')) self.first()\r\n    else if ($a.hasClass('by-pagination-last')) self.last()\r\n    else if ($a.hasClass('by-pagination-prev')) self.prev()\r\n    else if ($a.hasClass('by-pagination-next')) self.next()\r\n\r\n    // 跳转到点击页面\r\n    else if ($a.data('page')) self.to($a.data('page'))\r\n  })\r\n}\r\n\r\n// 默认配置\r\nPagination.DEFAULTS = {\r\n  firstLastBtn: true,\r\n  firstLastTxt: ['首页', '尾页'],\r\n  pages: 1,\r\n  page: 1,\r\n  pageTemplate: `\r\n    <li>\r\n      <a href=\"#\"></a>\r\n    </li>\r\n  `,\r\n  prevNextBtn: true,\r\n  prevNextTxt: ['上一页', '下一页']\r\n}\r\n\r\n/*\r\n * @description 初始化\r\n */\r\nPagination.prototype.init = function(options) {\r\n  if (options) {\r\n    this.options.pages = options.pages\r\n    this.$el.empty()\r\n  }\r\n  var page = this.options.page\r\n  var pages = this.options.pages\r\n  var pageTemplate = this.options.pageTemplate\r\n\r\n  // 生成当前页\r\n  this.$active = $(pageTemplate).appendTo(this.$el).addClass('active')\r\n\r\n  // 生成首页和尾页按钮\r\n  if (this.options.firstLastBtn) {\r\n    this.$first = $(pageTemplate).insertBefore(this.$active)\r\n    this.$first.find('a')\r\n      .addClass('by-pagination-first')\r\n      .text(this.options.firstLastTxt[0])\r\n\r\n    this.$last = $(pageTemplate).insertAfter(this.$active)\r\n    this.$last.find('a')\r\n      .addClass('by-pagination-last')\r\n      .text(this.options.firstLastTxt[1])\r\n  }\r\n\r\n  // 生成上一页和下一页按钮\r\n  if (this.options.prevNextBtn) {\r\n    this.$prev = $(pageTemplate).insertBefore(this.$active)\r\n    this.$prev.find('a')\r\n      .addClass('by-pagination-prev')\r\n      .text(this.options.prevNextTxt[0])\r\n\r\n    this.$next = $(pageTemplate).insertAfter(this.$active)\r\n    this.$next.find('a')\r\n      .addClass('by-pagination-next')\r\n      .text(this.options.prevNextTxt[1])\r\n  }\r\n\r\n  // 生成第一页和最后一页按钮\r\n  if (pages > 1) {\r\n    this.$p1 = $(pageTemplate).insertBefore(this.$active)\r\n    this.$p1.find('a').data('page', 1).text(1)\r\n    this.$p2 = $(pageTemplate).insertAfter(this.$active)\r\n    this.$p2.find('a').data('page', pages).text(pages)\r\n  }\r\n\r\n  // 生成当前页两边的页码按钮\r\n  for (let i = 5; i >= 1; i--) {\r\n    if (pages > i + 1) {\r\n      this[`$minus${i}`] = $(pageTemplate).insertBefore(this.$active)\r\n      this[`$minus${i}`].find('a').data('page', page - i)\r\n      this[`$plus${i}`] = $(pageTemplate).insertAfter(this.$active)\r\n      this[`$plus${i}`].find('a').data('page', page + i)\r\n    }\r\n  }\r\n\r\n  // 生成省略号\r\n  if (pages > 7) {\r\n    this.$hellip1 = $(`\r\n      <li>\r\n        <span>&hellip;</span>\r\n      </li>\r\n      `).insertAfter(this.$p1)\r\n\r\n    this.$hellip2 = $(`\r\n      <li>\r\n        <span>&hellip;</span>\r\n      </li>\r\n      `).insertBefore(this.$p2)\r\n  }\r\n\r\n  this.render(this.options.page)\r\n}\r\n\r\n/*\r\n * @description to\r\n * @param {Number} page 页码值\r\n */\r\nPagination.prototype.to = function(page) {\r\n  this.options.page = parseInt(page) || 1\r\n  this.$el.trigger('page.by.pagination', this.options.page)\r\n  this.$active.find('a').focus()\r\n  this.render(this.options.page)\r\n}\r\n\r\n/*\r\n * @description 跳转到第一页\r\n */\r\nPagination.prototype.first = function() {\r\n  if (this.options.page == 1) return\r\n  this.options.page = 1\r\n  this.to(1)\r\n}\r\n\r\n/*\r\n * @description 上一页\r\n */\r\nPagination.prototype.prev = function() {\r\n  if (this.options.page <= 1) return\r\n  this.options.page--\r\n  this.to(this.options.page)\r\n}\r\n\r\n/*\r\n * @description 下一页\r\n */\r\nPagination.prototype.next = function() {\r\n  if (this.options.page >= this.options.pages) return\r\n  this.options.page++\r\n  this.to(this.options.page)\r\n}\r\n\r\n/*\r\n * @description 跳转到最后一页\r\n */\r\nPagination.prototype.last = function() {\r\n  if (this.options.page == this.options.pages) return\r\n  this.options.page = this.options.pages\r\n  this.to(this.options.pages)\r\n}\r\n\r\n/*\r\n * @description render\r\n */\r\nPagination.prototype.render = function(page) {\r\n  var pages = this.options.pages\r\n\r\n  this.$active.find('a').text(page)\r\n\r\n  if (pages > 1) {\r\n    page > 1 ? this.$p1.show() : this.$p1.hide()\r\n    page < pages ? this.$p2.show() : this.$p2.hide()\r\n  }\r\n\r\n  if (pages > 2) {\r\n    this.$minus1.find('a').data('page', page - 1).text(page - 1)\r\n    this.$plus1.find('a').data('page', page + 1).text(page + 1)\r\n    page > 2 ? this.$minus1.show() : this.$minus1.hide()\r\n    page < pages - 1 ? this.$plus1.show() : this.$plus1.hide()\r\n  }\r\n\r\n  if (pages > 3) {\r\n    this.$minus2.find('a').data('page', page - 2).text(page - 2)\r\n    this.$plus2.find('a').data('page', page + 2).text(page + 2)\r\n    page > 3 ? this.$minus2.show() : this.$minus2.hide()\r\n    page < pages - 2 ? this.$plus2.show() : this.$plus2.hide()\r\n  }\r\n\r\n  if (pages > 4) {\r\n    this.$minus3.find('a').data('page', page - 3).text(page - 3)\r\n    this.$plus3.find('a').data('page', page + 3).text(page + 3)\r\n    page > pages - 3 && page > 4 ? this.$minus3.show() : this.$minus3.hide()\r\n    page < 4 && page < pages - 3 ? this.$plus3.show() : this.$plus3.hide()\r\n  }\r\n\r\n  if (pages > 5) {\r\n    this.$minus4.find('a').data('page', page - 4).text(page - 4)\r\n    this.$plus4.find('a').data('page', page + 4).text(page + 4)\r\n    page > pages - 2 && page > 5 ? this.$minus4.show() : this.$minus4.hide()\r\n    page < 3 && page < pages - 4 ? this.$plus4.show() : this.$plus4.hide()\r\n  }\r\n\r\n  if (pages > 6) {\r\n    this.$minus5.find('a').data('page', page - 5).text(page - 5)\r\n    this.$plus5.find('a').data('page', page + 5).text(page + 5)\r\n    page > pages - 1 ? this.$minus5.show() : this.$minus5.hide()\r\n    page < 2 ? this.$plus5.show() : this.$plus5.hide()\r\n  }\r\n\r\n  // hellip\r\n  if (pages > 7) {\r\n    page > 4 ? this.$hellip1.show() : this.$hellip1.hide()\r\n    page < pages - 3 ? this.$hellip2.show() : this.$hellip2.hide()\r\n  }\r\n\r\n  // first last\r\n  if (this.options.firstLastBtn) {\r\n    if (page == 1) {\r\n      this.$first.addClass('disabled')\r\n    } else {\r\n      this.$first.removeClass('disabled')\r\n    }\r\n\r\n    if (page == pages) {\r\n      this.$last.addClass('disabled')\r\n    } else {\r\n      this.$last.removeClass('disabled')\r\n    }\r\n  }\r\n\r\n  // prev next\r\n  if (this.options.prevNextBtn) {\r\n    if (page == 1) {\r\n      this.$prev.addClass('disabled')\r\n    } else {\r\n      this.$prev.removeClass('disabled')\r\n    }\r\n\r\n    if (page == pages) {\r\n      this.$next.addClass('disabled')\r\n    } else {\r\n      this.$next.removeClass('disabled')\r\n    }\r\n  }\r\n}\r\n\r\nfunction Plugin(option) {\r\n  return this.each(function() {\r\n    var $this   = $(this)\r\n    var data    = $this.data('byPagination')\r\n    var options = $.extend({}, $this.data(), typeof option == 'object' && option)\r\n\r\n    if (!data) $this.data('byPagination', (data = new Pagination(this, options)))\r\n    // 重新初始化\r\n\t  else if (typeof option == 'object' && data.options.pages != option.pages) data.init(option)\r\n    if (typeof option == 'string' && typeof data[option] == 'function') data[option]()\r\n    if (typeof option == 'number') data.to(option)\r\n  })\r\n}\r\n\r\n$.fn.byPagination          = Plugin\r\n$.fn.byPagination.DEFAULTS = Pagination.DEFAULTS\r\n\r\n$(window).on('load.by.pagination', () => {\r\n  Plugin.call($('[data-init=\"by-pagination\"]'))\r\n})\r\n"],"sourceRoot":"/source/"}